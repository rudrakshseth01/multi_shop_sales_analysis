# Generated by Django 5.1.5 on 2025-01-15 07:49

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('primary_id', models.CharField(max_length=10, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Medicine ID must be in format MED001', regex='^MED\\d{3}$')])),
                ('name', models.CharField(max_length=100)),
                ('generic_name', models.CharField(max_length=100)),
                ('manufacturer', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('tablet', 'Tablet'), ('syrup', 'Syrup'), ('injection', 'Injection'), ('cream', 'Cream'), ('drops', 'Drops')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('side_effects', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='inventory_m_name_7f2fd2_idx'), models.Index(fields=['manufacturer'], name='inventory_m_manufac_d4d4cb_idx')],
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('contact_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in format: +999999999', regex='^\\+?1?\\d{9,15}$')])),
                ('license_number', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message='License number must be in format LIC0000000', regex='^LIC\\d{7}$')])),
                ('opening_time', models.TimeField()),
                ('closing_time', models.TimeField()),
                ('opening_date', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='inventory_s_name_420685_idx'), models.Index(fields=['license_number'], name='inventory_s_license_0bfc62_idx')],
            },
        ),
        migrations.CreateModel(
            name='MedicineStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(max_length=50)),
                ('expiry_date', models.DateField()),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('reorder_level', models.IntegerField(default=10)),
                ('last_restocked', models.DateTimeField(auto_now=True)),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.medicine')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.shop')),
            ],
        ),
        migrations.CreateModel(
            name='MedicineSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('upi', 'UPI'), ('card', 'Card'), ('insurance', 'Insurance')], max_length=20)),
                ('prescription', models.FileField(blank=True, null=True, upload_to='prescriptions/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('customer_name', models.CharField(blank=True, max_length=100)),
                ('customer_phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in format: +999999999', regex='^\\+?1?\\d{9,15}$')])),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.medicine')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.medicinestock')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.shop')),
            ],
        ),
        migrations.CreateModel(
            name='StockAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('low_stock', 'Low Stock'), ('expiring', 'Expiring Soon'), ('expired', 'Expired')], max_length=20)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('medicine_stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.medicinestock')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='medicinestock',
            index=models.Index(fields=['medicine', 'shop'], name='inventory_m_medicin_007639_idx'),
        ),
        migrations.AddIndex(
            model_name='medicinestock',
            index=models.Index(fields=['expiry_date'], name='inventory_m_expiry__50fc49_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='medicinestock',
            unique_together={('medicine', 'shop', 'batch_number')},
        ),
        migrations.AddIndex(
            model_name='medicinesale',
            index=models.Index(fields=['medicine', 'shop'], name='inventory_m_medicin_ad0798_idx'),
        ),
        migrations.AddIndex(
            model_name='medicinesale',
            index=models.Index(fields=['date'], name='inventory_m_date_12b158_idx'),
        ),
        migrations.AddIndex(
            model_name='stockalert',
            index=models.Index(fields=['alert_type', 'resolved'], name='inventory_s_alert_t_bb311b_idx'),
        ),
        migrations.AddIndex(
            model_name='stockalert',
            index=models.Index(fields=['created_at'], name='inventory_s_created_671808_idx'),
        ),
    ]
